plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    id("com.facebook.react")
}

react {
    // Needed to enable Autolinking - https://github.com/react-native-community/cli/blob/master/docs/autolinking.md
    autolinkLibrariesWithApp()
    entryFile = file("../../src/index.js")
}

android {
    namespace 'com.vinkt.brownfielldapp'
    compileSdk 35

    defaultConfig {
        applicationId "com.vinkt.brownfielldapp"
        targetSdk 35
        versionCode 1
        versionName "1.0"
        
        minSdk rootProject.ext.minSdkVersion
        ndkVersion rootProject.ext.ndkVersion
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        // https://github.com/software-mansion/react-native-reanimated/issues/6753#issuecomment-2498548375
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17"
                // Removed the unused ANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES variable
                // Simplified CMake arguments to only include necessary flags
                // Enabled Prefab for better native module support
                // Added the -Wno-dollar-in-identifier-extension flag to suppress the warning
                // Maintains all other necessary build configurations
                // Cleans build directories before rebuilding
                arguments "-DANDROID_STL=c++_shared","-DCMAKE_CXX_FLAGS=-Wno-dollar-in-identifier-extension"
                // arguments "-DANDROID_PROJECT_ROOT=${rootDir.absolutePath}"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        compose true
        prefab true
    }
    composeOptions {
        // https://developer.android.com/jetpack/androidx/releases/compose-kotlin
        kotlinCompilerExtensionVersion '1.5.15'
    }
    packaging {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    
//    externalNativeBuild {
//        cmake {
//            path "$projectDir/src/main/jni/CMakeLists.txt"
//        }
//    }
}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.fragment.ktx

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest

    // React Native dependencies
    implementation(libs.react.android)
    implementation(libs.hermes.android)
    
    // Required for new architecture
    implementation(libs.androidx.swiperefreshlayout)
}